		int totalPay;	// totalPay== the total paid out so far.		int count;	// count== the number of employees processed so far.		int count500;	// count== the number of employees processed so far 				//      whose pay exceeds $500.		Employee   emp;	// emp refers to the most recently read Employee object.		int hours;	// hours== the number of hours worked by the				//      most recently read employee.		Employee   emax;// emax== the employee with the most number of hours 				//  worked(so far) or is null if none have been considered 				//  so far.		int maxhours;	// maxhours== the number of hours worked by employee 				//      emax.		count500 = 0;		count = 0;		emax  =  null;		maxhours  =  -999;	// No meaningful value for maxhours at this point.		totalPay = 0;		emp = Employee.readIn(br);		// All Employee objects created prior to the one emp refers to have been processed.		while (emp!=null) {			System.out.print("Enter hours for ");			System.out.print(emp.getName());			System.out.print(": ");			hours = Integer.parseInt(br.readLine());			count++;			int  pay = emp.calcPay(hours);			if (pay>500)				count500++;			if (emax==null || hours>maxhours) {				maxhours = hours;				emax = emp;			}			System.out.println(pay);			totalPay += pay;			emp = Employee.readIn(br);		}		System.out.print("Total payout: ");		System.out.println(totalPay);		System.out.print("Number whose pay exceeds 500: ");		System.out.println(count500);		System.out.print("Employee with the longest hours: ");		System.out.println(emax.getName());